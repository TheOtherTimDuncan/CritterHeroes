@model CH.Website.Models.LoginModel

@{
    ViewBag.Title = "Login";
}

@using (Html.FluentHtml().Form().LoginAction(Model.ReturnUrl).Class("form-horizontal").AutoCompleteOff().Begin())
{
    @Html.AntiForgeryToken()

    <div class="form-group">
        @Html.FluentHtml().Label().For(m => m.Username).Class("col-sm-2 control-label")
        <div class="col-sm-10">
            @Html.FluentHtml().InputText().For(m => m.Username).Class("form-control").Placeholder("Username").AutoFocus()
            @Html.ValidationMessageFor(m => m.Username)
        </div>
    </div>

    <div class="form-group">
        @Html.FluentHtml().Label().For(m => m.Password).Class("col-sm-2 control-label")
        <div class="col-sm-10">
            @Html.FluentHtml().InputPassword().For(m => m.Password).Class("form-control").Placeholder("Password")
            @Html.ValidationMessageFor(m => m.Password)
        </div>
    </div>

    <div class="form-group">
        <div class="col-sm-offset-2 col-sm-10">
            @Html.ValidationSummary(true, null)
        </div>
    </div>

    <div class="form-group">
        <div class="col-sm-offset-2 col-sm-10">
            <input type="submit" value="Login" class="btn btn-primary btn-sm" />
        </div>
    </div>
    
    <div class="form-group">
        <div class="col-sm-offset-2 col-sm-10">
            <a href="@Url.AccountAction(x => x.ConfirmEmail())">Have confirmation code?</a><br />
            <a href="@Url.AccountAction(x => x.ForgotPassword())">Forgot password?</a><br />
            <a href="@Url.AccountAction(x => x.ForgotUsername())">Forgot username?</a><br />
            <a href="@Url.AccountAction(x => x.ResendConfirmationCode())">Resend confirmation code?</a>
        </div>
    </div>
}
