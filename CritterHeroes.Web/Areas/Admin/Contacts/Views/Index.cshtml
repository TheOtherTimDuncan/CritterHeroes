@model CritterHeroes.Web.Areas.Admin.Contacts.Models.ContactsModel
@using CritterHeroes.Web.Areas.Admin.Contacts.Queries

@{
    ViewBag.Title = "Contacts";
}

<script id="template" type="text/x-handlebars">
    {{#each contacts}}
    <tr data-active="{{isActive}}">
        <td><span class="{{#if isPerson}}person{{/if}}{{#if isBusiness}}business{{/if}}">&nbsp;</span></td>
        <td>{{contactName}}</td>
        <td>
            {{address}}
            {{#if address}}
            <br />
            {{/if}}
            {{city}}{{#if city}}, {{/if}}{{state}}&nbsp;{{zip}}
        </td>
        <td>{{email}}</td>
    </tr>
    {{else}}
    <tr>
        <td colspan="3">No contacts found.</td>
    </tr>
    {{/each}}
</script>

@section scripts{
    <script type="text/javascript">
        (function (cheroes) {
            cheroes.query = @JavascriptConvert.SerializeObject(Model.Query);
        })(this.cheroes = this.cheroes || {});
    </script>
    <script type="text/javascript" src="@Url.Content(VersionedStatics.UrlFor("handlebars.js"))"></script>
    <script type="text/javascript" src="@Url.Content(VersionedStatics.UrlFor("ch.contacts-list.js"))"></script>
}

<h2>Contacts</h2>

<div class="filters-container">
    <section>Filters</section>
    <section>
        <label for="status">Status</label>
        <select id="status" data-filter="status">
            <option value="@ContactsQuery.StatusKeys.Any" selected="@(Model.Query.Status==ContactsQuery.StatusKeys.Any)">Any status</option>
            <option value="@ContactsQuery.StatusKeys.Active" selected="@(Model.Query.Status.IsNullOrEmpty() || Model.Query.Status==ContactsQuery.StatusKeys.Active)">Active</option>
            <option value="@ContactsQuery.StatusKeys.Inactive" selected="@(Model.Query.Status==ContactsQuery.StatusKeys.Inactive)">Inactive</option>
        </select>
    </section>
    <section>
        <label for="show">Show</label>
        <select id="show" data-filter="show">
            <option value="@ContactsQuery.ShowKeys.All" selected="@(Model.Query.Show==ContactsQuery.ShowKeys.All)">All</option>
            <option value="@ContactsQuery.ShowKeys.Businesses" selected="@(Model.Query.Show==ContactsQuery.ShowKeys.Businesses)">Businesses</option>
            <option value="@ContactsQuery.ShowKeys.People" selected="@(Model.Query.Show==ContactsQuery.ShowKeys.People)">People</option>
        </select>
    </section>
    <section>
        <span data-active="false" class="color-key">Inactive</span>
    </section>
</div>

@if (Model.ShowImports)
{
    <div>
        <form action="@Url.AdminPeopleImportAction()" method="post" class="pull-right">
            @Html.AntiForgeryToken()
            <input type="submit" class="btn btn-primary" value="Import People" />
        </form>

        <form action="@Url.AdminBusinessImportAction()" method="post" class="pull-right">
            @Html.AntiForgeryToken()
            <input type="submit" class="btn btn-primary" value="Import Businesses" />
        </form>

    </div>
}

<table id="contacts-container" class="table table-striped table-hover table-condensed">
    <thead>
        <tr>
            <th>&nbsp;</th>
            <th>Name</th>
            <th>Address</th>
            <th>Email</th>
        </tr>
    </thead>
    <tbody data-url="@Url.AdminContactsListAction()"></tbody>
</table>

<ul class="paging-container"></ul>
