@model CritterHeroes.Web.Areas.Admin.Organizations.Models.EditProfileModel

@{
    ViewBag.Title = "Edit Organization Profile";
}

@section scripts{
    @Scripts.Render("~/bundles/dropzonescripts")
    @Scripts.Render("~/bundles/orgedit")
}

@section css{
    @Styles.Render("~/Content/dropzonecss")
}

@using (var container = Html.FluentHtml().BootstrapModalContainer().ID("modal").Begin())
{
    using (var dialog = container.CreateDialog().Begin())
    {
        using (var content = dialog.CreateModalContent().Begin())
        {
            using (var body = content.CreateBody().Begin())
            {
                <p>Uploading logo...</p>
                <div class="progress">
                    <div class="progress-bar" role="progressbar" aria-valuemin="0" aria-valuemax="100">0%</div>
                </div>
            }
            using (var footer = content.CreateFooter().Begin())
            {
                <span id="button-container">
                    <button id="cancel-upload" type="button" data-dismiss="modal" class="btn btn-primary">Cancel</button>
                </span>
            }
        }
    }
}


@using (Html.BeginForm("", "", FormMethod.Post, new
        {
            enctype = "multipart/form-data",
            id = "edit-profile"
        }))
{

    @Html.AntiForgeryToken()
    <div class="row">
        <div class="form-col-offset"></div>

        <div class="form-col-2">

            <section class="form-group">
                <div class="input-group">
                    <span class="input-group-addon"><span class="glyphicon glyphicon-home"></span></span>
                    @Html.FluentHtml().Input().For(m => m.Name).ForBootstrap().AutoFocus()
                </div>
                @Html.ValidationMessageFor(m => m.Email)
            </section>

            <section class="form-group">
                <div class="input-group">
                    <span class="input-group-addon"><span class="glyphicon glyphicon-home"></span></span>
                    @Html.FluentHtml().Input().For(m => m.ShortName).ForBootstrap()
                </div>
                @Html.ValidationMessageFor(m => m.Email)
            </section>

            <section class="form-group">
                <div class="input-group">
                    <span class="input-group-addon"><span class="glyphicon glyphicon-envelope"></span></span>
                    @Html.FluentHtml().Input().For(m => m.Email).ForBootstrap()
                </div>
                @Html.ValidationMessageFor(m => m.Email)
            </section>

        </div>
        <div class="form-col-3">

            <section class="form-group">
                <img id="logo" src="@Model.LogoUrl" class="logo-medium" alt="Logo" />
            </section>

            <section class="form-group">
                <button id="change-logo" type="button" class="btn btn-info"><span class="glyphicon glyphicon-plus"></span>&nbsp;Change Logo</button>
                <div id="thumb-msg" class="busy message nodisplay">Getting thumbnail...</div>
                <div id="logo-error" class="field-validation-error"></div>
            </section>

        </div>
    </div>
    <div class="row">
        <div class="form-col-offset"></div>
        <div class="form-col-2">

            <section id="error" class="form-group validation-summary-errors">
                @Html.ValidationSummary(excludePropertyErrors: true)
            </section>

            <section class="form-group">
                <input type="submit" value="Save" />
                @Html.CancelButton()
            </section>

        </div>
    </div>
}
