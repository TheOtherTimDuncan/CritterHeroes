@model CritterHeroes.Web.Areas.Home.Models.MenuModel
@using CritterHeroes.Web.Common.Identity

<nav>
    <div>
        <header>
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <img src="@Model.LogoUrl" class="logo-small" />
            @Html.FluentHtml().Link().HomeActionLink(x => x.Index()).Text(Model.OrganizationShortName).Class("navbar-brand")
        </header>
        <div class="navbar-collapse collapse">
            @{
                var menuNav = Html.FluentHtml().BootstrapNav()
                    .AsNavBar()
                    .Class("navbar-left")
                    .AddElement(
                        Html.FluentHtml().BootstrapNavItem().AddElement(
                            Html.FluentHtml().Link().HomeActionLink(x => x.Index()).Text("Home")
                        )
                    );

                if (Model.CurrentUser.IsInRole(IdentityRole.RoleNames.MasterAdmin))
                {
                    menuNav.AddElement(
                        Html.FluentHtml().BootstrapNavItem().AddElement(
                            Html.FluentHtml().Link().ErrorLogActionLink(x => x.Index()).Text("Error Log")
                        )
                    );

                    var dropdownMaintenance = Html.FluentHtml().BootstrapNavItem()
                        .AsDropdown("Admin")
                        .AddElement(
                            Html.FluentHtml().BootstrapNav()
                                .AsDropdown()
                                .AddElement(
                                    Html.FluentHtml().BootstrapNavItem().AddElement(
                                        Html.FluentHtml().Link().OrganizationActionLink(x => x.EditProfile()).Text("Organization Profile")
                                    )
                                )
                                .AddElement(
                                    Html.FluentHtml().BootstrapNavItem().AddElement(
                                        Html.FluentHtml().Link().ListsActionLink(x => x.Index()).Text("Lists Dashboard")
                                    )
                                )
                            );
                    menuNav.AddElement(dropdownMaintenance);
                }

            }
            @menuNav

            @{
                var loginNav = Html.FluentHtml().BootstrapNav()
                    .AsNavBar()
                    .Class("navbar-right");

                if (Model.CurrentUser.Identity.IsAuthenticated)
                {
                    loginNav.AddElement(
                        Html.FluentHtml().BootstrapNavItem().AddElement(
                            Html.FluentHtml().Link().EditProfileLink().Class("hidden-xs").Text("Welcome, " + Model.UserDisplayName)
                        )
                    );

                    loginNav.AddElement(
                        Html.FluentHtml().BootstrapNavItem().AddElement(
                            Html.FluentHtml().Link().EditProfileLink().Class("visible-xs").Text("Edit Profile")
                        )
                    );

                    loginNav.AddElement(
                        Html.FluentHtml().BootstrapNavItem().AddElement(
                            Html.FluentHtml().Link().AccountActionLink(x => x.LogOut()).Text("Logout")
                        )
                    );
                }
                else
                {
                    loginNav.AddElement(
                        Html.FluentHtml().BootstrapNavItem().AddElement(
                            Html.FluentHtml().Link().AccountActionLink(x => x.Login(null)).Text("Login")
                        )
                    );
                }
            }
            @loginNav
        </div>
    </div>
</nav>
